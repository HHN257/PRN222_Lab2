@page "/ConsultationSessions/ConsultationSessionNamHhForm/{ConsultationSessionNamHhid:int?}"
=@using Microsoft.AspNetCore.Authorization
@using QuitSmoking.Repository.NamHH.Models
@inject NavigationManager NavigationManager
@attribute [Authorize]

<h3>@(IsEditMode ? "Chỉnh sửa buổi tư vấn" : "Tạo mới buổi tư vấn")</h3>

@if (sessionModel == null)
{
    <p>Đang tải dữ liệu...</p>
}
else
{
    <EditForm Model="sessionModel" FormName="ConsultationSessionForm" OnValidSubmit="async () => await SaveConsultationSession()">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white">
                <h4 class="mb-0">Thông tin buổi tư vấn</h4>
            </div>
            <div class="card-body">
                <input type="hidden" value="@sessionModel.ConsultationSessionNamHhid" />

                <!-- Row: User ID + Coach ID -->
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label>User</label>
                        <InputSelect class="form-control" @bind-Value="sessionModel.UserAccountId">
                            <option value="">-- Chọn người dùng --</option>
                            @foreach (var user in userAccounts)
                            {
                                <option value="@user.UserAccountId">@user.FullName (@user.Email)</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => sessionModel.UserAccountId)" />
                    </div>
                    <div class="col-md-6 mb-3">
                        <label>Coach</label>
                        <InputSelect class="form-control" @bind-Value="sessionModel.CoachId">
                            <option value="">-- Chọn huấn luyện viên --</option>
                            @foreach (var coach in coachAccounts)
                            {
                                <option value="@coach.UserAccountId">@coach.FullName (@coach.Email)</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => sessionModel.CoachId)" />
                    </div>
                </div>

                <!-- Row: Session Date + Duration -->
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label>Ngày tư vấn</label>
                        <InputDate class="form-control" @bind-Value="sessionModel.SessionDate" />
                        <ValidationMessage For="@(() => sessionModel.SessionDate)" />
                    </div>
                    <div class="col-md-6 mb-3">
                        <label>Thời lượng (phút)</label>
                        <InputNumber class="form-control" @bind-Value="sessionModel.DurationMinutes" />
                        <ValidationMessage For="@(() => sessionModel.DurationMinutes)" />
                    </div>
                </div>

                <!-- Row: Session Topic + Rating -->
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label>Chủ đề</label>
                        <InputText class="form-control" @bind-Value="sessionModel.SessionTopic" />
                        <ValidationMessage For="@(() => sessionModel.SessionTopic)" />
                    </div>
                    <div class="col-md-6 mb-3">
                        <label>Đánh giá</label>
                        <InputNumber class="form-control" @bind-Value="sessionModel.Rating" />
                        <ValidationMessage For="@(() => sessionModel.Rating)" />
                    </div>
                </div>

                <!-- Row: Created Date + Session Type -->
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label>Ngày tạo</label>
                        <InputDate class="form-control" @bind-Value="sessionModel.CreatedDate" />
                        <ValidationMessage For="@(() => sessionModel.CreatedDate)" />
                    </div>
                    <div class="col-md-6 mb-3">
                        <label>Loại phiên</label>
                        <InputText class="form-control" @bind-Value="sessionModel.SessionType" />
                        <ValidationMessage For="@(() => sessionModel.SessionType)" />
                    </div>
                </div>

                <!-- Checkboxes -->
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <div class="form-check">
                            <InputCheckbox class="form-check-input" @bind-Value="sessionModel.IsCompleted" />
                            <label class="form-check-label">Hoàn thành</label>
                        </div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <div class="form-check">
                            <InputCheckbox class="form-check-input" @bind-Value="sessionModel.FeedbackProvided" />
                            <label class="form-check-label">Đã phản hồi</label>
                        </div>
                    </div>
                </div>

                <!-- Buttons -->
                <div class="mt-4">
                    <button class="btn btn-success" type="submit">Lưu</button>
                    <a class="btn btn-secondary ms-2" href="/ConsultationSessions/ConsultationSessionNamHhList">Quay về</a>
                </div>
            </div>
        </div>
    </EditForm>
}

@code {
    [Parameter]
    public int? ConsultationSessionNamHhid { get; set; }

    private ConsultationSessionNamHh sessionModel = new();
    private List<SystemUserAccount> allUsers = new();
    private List<SystemUserAccount> userAccounts = new();
    private List<SystemUserAccount> coachAccounts = new();

    private bool IsEditMode => ConsultationSessionNamHhid.HasValue && ConsultationSessionNamHhid > 0;

    protected override async Task OnInitializedAsync()
    {
        // Fetch all users
        allUsers = (await _ServiceProviders.GetSystemUserAccountService.GetAllUserAccountsAsync()).ToList();

        // Filter by RoleId (adjust RoleId values as needed)
        userAccounts = allUsers.Where(u => u.RoleId == 1).ToList();   // Example: RoleId == 1 for users
        coachAccounts = allUsers.Where(u => u.RoleId == 2).ToList();  // Example: RoleId == 2 for coaches

        if (IsEditMode)
        {
            sessionModel = await _ServiceProviders.GetConsultationSessionNamHhService.GetByIdAsync(ConsultationSessionNamHhid.Value);
        }
        else
        {
            sessionModel = new ConsultationSessionNamHh
            {
                SessionDate = DateTime.Today,
                CreatedDate = DateTime.Now,
                IsCompleted = false,
                FeedbackProvided = false
            };
        }
    }

    private async Task SaveConsultationSession()
    {
        int result;
        if (IsEditMode)
        {
            result = await _ServiceProviders.GetConsultationSessionNamHhService.UpdateAsync(sessionModel);
        }
        else
        {
            sessionModel.CreatedDate = DateTime.Now;
            result = await _ServiceProviders.GetConsultationSessionNamHhService.CreateAsync(sessionModel);
        }

        if (result > 0)
        {
            NavigationManager.NavigateTo("/ConsultationSessions/ConsultationSessionNamHhList");
        }
        else
        {
            Console.WriteLine("Lưu thất bại.");
        }
    }
}
